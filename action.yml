apiVersion: automation.cloudbees.io/v1alpha1
kind: action
name: gosec-hybrid

inputs:
  ref:
    description: 'Flag to indicate the ref that should be archived (same as supplied to checkout)'
    required: false
    default: ''
  workspace-dir:
    description: 'Flag to mention the path where the checked out code will be present'
    required: false
    default: ''
    
  cb_token:
    description: 'Token of Cloudbees'
    required: true

  cb_api_url:
    description: 'API to publish results'
    required: true
    default: 'https://api.saas-preprod.beescloud.com'

  gh_run_id:
    description: 'RUN id of the GHA'
    required: true

  gh_job_id:
    description: 'JOB id of the GHA'
    required: true

  gh_step_id:
    description: 'STEP id of the GHA'
    required: true

runs:
  using: composite
  steps:
    - name: Generate sha and ref 
      uses: docker://public.ecr.aws/l7o7z1g8/actions/assets-plugin-chain-utils:d14621a0e281098b736a3d21cc92edd1fdc8b504
      with:
        entrypoint: assets-plugin-chain-utils
        args: get-commit-info
      env:
         INPUT_CLOUDBEES_API_TOKEN: ${{ inputs.cb_token }}
         INPUT_CLOUDBEES_API_URL: ${{ inputs.cb_api_url }}
         INPUT_RUN_ID: ${{ inputs.gh_run_id }}
         INPUT_CLOUDBEES_EVENT_PATH: /cloudbees/event.json
         INPUT_REF: ${{ inputs.ref }}
         INPUT_WORKSPACE_DIR: ${{ inputs.workspace-dir }}

    - name: Generate reference files 
      uses: docker://public.ecr.aws/l7o7z1g8/actions/assets-plugin-chain-utils:d14621a0e281098b736a3d21cc92edd1fdc8b504
      with:
          entrypoint: assets-plugin-chain-utils
          args: generate-references --asset-type "CODE"
      env:
          INPUT_CLOUDBEES_API_TOKEN: ${{ inputs.cb_token }}
          INPUT_CLOUDBEES_API_URL: ${{ inputs.cb_api_url }}
          INPUT_RUN_ID: ${{ inputs.gh_run_id }}

    - name: Run SCC Scan for tag generation
      uses: docker://public.ecr.aws/l7o7z1g8/actions/assets-scc-scanner:1a81610bbb3d6e6f2c4586f21d85638e56718a70
      continue-on-error: true
      env:
          RUN_ID: ${{ cloudbees.run_id }}
          JOB_ID: ${{ job.id }}
          STEP_ID: ${{ step.internal.id }}
      run: /app/plugin-scc-scanner -mode single

    - name: Run gosec compliance plugin
      uses: docker://public.ecr.aws/l7o7z1g8/actions/assets-gosec-scanner:1b2c0980e5495cc0132a3e693ba8e6ebf2c7cd71
      env:
          RUN_ID: ${{ inputs.gh_run_id }}
          JOB_ID: ${{ inputs.gh_job_id }}
          STEP_ID: ${{ inputs.gh_step_id }}
      run: /app/plugin-gosec-scanner -mode single

    - name: Complete execution plan
      uses: docker://public.ecr.aws/l7o7z1g8/actions/assets-plugin-chain-utils:d14621a0e281098b736a3d21cc92edd1fdc8b504
      id: process-outputs
      with:
          entrypoint: assets-plugin-chain-utils
          args: process-outputs
      env:
          INPUT_CLOUDBEES_API_TOKEN: ${{ inputs.cb_token }}
          INPUT_CLOUDBEES_API_URL: ${{ inputs.cb_api_url }}
          INPUT_RUN_ID: ${{ inputs.gh_run_id }}
